// Code generated by protoc-gen-go. DO NOT EDIT.
// source: action.proto

/*
Package leveler is a generated protocol buffer package.

It is generated from these files:
	action.proto
	config.proto
	constraint.proto
	host.proto
	requirement.proto
	role.proto
	util.proto

It has these top-level messages:
	ActionId
	Action
	ActionResult
	ActionList
	Config
	Constraint
	HostId
	Host
	HostList
	RequirementId
	Requirement
	RequirementList
	RoleId
	Role
	RoleList
	Query
*/
package leveler

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ActionId struct {
	Id string `protobuf:"bytes,1,opt,name=Id" json:"Id,omitempty"`
}

func (m *ActionId) Reset()                    { *m = ActionId{} }
func (m *ActionId) String() string            { return proto.CompactTextString(m) }
func (*ActionId) ProtoMessage()               {}
func (*ActionId) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ActionId) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Action struct {
	Id          string `protobuf:"bytes,1,opt,name=Id" json:"Id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=Description" json:"Description,omitempty"`
	Command     string `protobuf:"bytes,4,opt,name=Command" json:"Command,omitempty"`
	Shell       string `protobuf:"bytes,5,opt,name=Shell" json:"Shell,omitempty"`
}

func (m *Action) Reset()                    { *m = Action{} }
func (m *Action) String() string            { return proto.CompactTextString(m) }
func (*Action) ProtoMessage()               {}
func (*Action) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Action) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Action) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Action) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Action) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func (m *Action) GetShell() string {
	if m != nil {
		return m.Shell
	}
	return ""
}

type ActionResult struct {
	Status int32 `protobuf:"varint,1,opt,name=Status" json:"Status,omitempty"`
}

func (m *ActionResult) Reset()                    { *m = ActionResult{} }
func (m *ActionResult) String() string            { return proto.CompactTextString(m) }
func (*ActionResult) ProtoMessage()               {}
func (*ActionResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ActionResult) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type ActionList struct {
	Results []*Action `protobuf:"bytes,1,rep,name=Results" json:"Results,omitempty"`
}

func (m *ActionList) Reset()                    { *m = ActionList{} }
func (m *ActionList) String() string            { return proto.CompactTextString(m) }
func (*ActionList) ProtoMessage()               {}
func (*ActionList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ActionList) GetResults() []*Action {
	if m != nil {
		return m.Results
	}
	return nil
}

func init() {
	proto.RegisterType((*ActionId)(nil), "leveler.ActionId")
	proto.RegisterType((*Action)(nil), "leveler.Action")
	proto.RegisterType((*ActionResult)(nil), "leveler.ActionResult")
	proto.RegisterType((*ActionList)(nil), "leveler.ActionList")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ActionEndpoint service

type ActionEndpointClient interface {
	GetAction(ctx context.Context, in *ActionId, opts ...grpc.CallOption) (*Action, error)
	ListActions(ctx context.Context, in *Query, opts ...grpc.CallOption) (*ActionList, error)
	CreateAction(ctx context.Context, in *Action, opts ...grpc.CallOption) (*ActionId, error)
	UpdateAction(ctx context.Context, in *Action, opts ...grpc.CallOption) (*Action, error)
	DeleteAction(ctx context.Context, in *ActionId, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
}

type actionEndpointClient struct {
	cc *grpc.ClientConn
}

func NewActionEndpointClient(cc *grpc.ClientConn) ActionEndpointClient {
	return &actionEndpointClient{cc}
}

func (c *actionEndpointClient) GetAction(ctx context.Context, in *ActionId, opts ...grpc.CallOption) (*Action, error) {
	out := new(Action)
	err := grpc.Invoke(ctx, "/leveler.ActionEndpoint/GetAction", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *actionEndpointClient) ListActions(ctx context.Context, in *Query, opts ...grpc.CallOption) (*ActionList, error) {
	out := new(ActionList)
	err := grpc.Invoke(ctx, "/leveler.ActionEndpoint/ListActions", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *actionEndpointClient) CreateAction(ctx context.Context, in *Action, opts ...grpc.CallOption) (*ActionId, error) {
	out := new(ActionId)
	err := grpc.Invoke(ctx, "/leveler.ActionEndpoint/CreateAction", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *actionEndpointClient) UpdateAction(ctx context.Context, in *Action, opts ...grpc.CallOption) (*Action, error) {
	out := new(Action)
	err := grpc.Invoke(ctx, "/leveler.ActionEndpoint/UpdateAction", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *actionEndpointClient) DeleteAction(ctx context.Context, in *ActionId, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/leveler.ActionEndpoint/DeleteAction", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ActionEndpoint service

type ActionEndpointServer interface {
	GetAction(context.Context, *ActionId) (*Action, error)
	ListActions(context.Context, *Query) (*ActionList, error)
	CreateAction(context.Context, *Action) (*ActionId, error)
	UpdateAction(context.Context, *Action) (*Action, error)
	DeleteAction(context.Context, *ActionId) (*google_protobuf.Empty, error)
}

func RegisterActionEndpointServer(s *grpc.Server, srv ActionEndpointServer) {
	s.RegisterService(&_ActionEndpoint_serviceDesc, srv)
}

func _ActionEndpoint_GetAction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActionId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActionEndpointServer).GetAction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/leveler.ActionEndpoint/GetAction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActionEndpointServer).GetAction(ctx, req.(*ActionId))
	}
	return interceptor(ctx, in, info, handler)
}

func _ActionEndpoint_ListActions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActionEndpointServer).ListActions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/leveler.ActionEndpoint/ListActions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActionEndpointServer).ListActions(ctx, req.(*Query))
	}
	return interceptor(ctx, in, info, handler)
}

func _ActionEndpoint_CreateAction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Action)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActionEndpointServer).CreateAction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/leveler.ActionEndpoint/CreateAction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActionEndpointServer).CreateAction(ctx, req.(*Action))
	}
	return interceptor(ctx, in, info, handler)
}

func _ActionEndpoint_UpdateAction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Action)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActionEndpointServer).UpdateAction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/leveler.ActionEndpoint/UpdateAction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActionEndpointServer).UpdateAction(ctx, req.(*Action))
	}
	return interceptor(ctx, in, info, handler)
}

func _ActionEndpoint_DeleteAction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActionId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActionEndpointServer).DeleteAction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/leveler.ActionEndpoint/DeleteAction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActionEndpointServer).DeleteAction(ctx, req.(*ActionId))
	}
	return interceptor(ctx, in, info, handler)
}

var _ActionEndpoint_serviceDesc = grpc.ServiceDesc{
	ServiceName: "leveler.ActionEndpoint",
	HandlerType: (*ActionEndpointServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAction",
			Handler:    _ActionEndpoint_GetAction_Handler,
		},
		{
			MethodName: "ListActions",
			Handler:    _ActionEndpoint_ListActions_Handler,
		},
		{
			MethodName: "CreateAction",
			Handler:    _ActionEndpoint_CreateAction_Handler,
		},
		{
			MethodName: "UpdateAction",
			Handler:    _ActionEndpoint_UpdateAction_Handler,
		},
		{
			MethodName: "DeleteAction",
			Handler:    _ActionEndpoint_DeleteAction_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "action.proto",
}

func init() { proto.RegisterFile("action.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 332 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x52, 0xcd, 0x4a, 0xc3, 0x40,
	0x10, 0x6e, 0xd3, 0x3f, 0x3b, 0x0d, 0x15, 0x47, 0x29, 0x21, 0x5e, 0xca, 0x1e, 0xa4, 0x5e, 0x52,
	0xac, 0x82, 0x07, 0x4f, 0xd2, 0x16, 0x09, 0x88, 0x60, 0x8b, 0x0f, 0x90, 0x76, 0xc7, 0x1a, 0xd8,
	0x64, 0x43, 0xb2, 0x11, 0x7a, 0xf1, 0x59, 0x7c, 0x54, 0xc9, 0x6e, 0x52, 0x24, 0x16, 0x6f, 0xf9,
	0xfe, 0xe6, 0xdb, 0x09, 0x03, 0x76, 0xb0, 0x55, 0xa1, 0x8c, 0xbd, 0x24, 0x95, 0x4a, 0x62, 0x4f,
	0xd0, 0x27, 0x09, 0x4a, 0x5d, 0xc8, 0x55, 0x28, 0x0c, 0xe9, 0x5e, 0xee, 0xa4, 0xdc, 0x09, 0x9a,
	0x6a, 0xb4, 0xc9, 0xdf, 0xa7, 0x14, 0x25, 0x6a, 0x6f, 0x44, 0xe6, 0xc2, 0xc9, 0xa3, 0x9e, 0xe0,
	0x73, 0x1c, 0x82, 0xe5, 0x73, 0xa7, 0x39, 0x6e, 0x4e, 0xfa, 0x2b, 0xcb, 0xe7, 0xec, 0x0b, 0xba,
	0x46, 0xab, 0x2b, 0x88, 0xd0, 0x7e, 0x09, 0x22, 0x72, 0x2c, 0xcd, 0xe8, 0x6f, 0x1c, 0xc3, 0x60,
	0x41, 0xd9, 0x36, 0x0d, 0x93, 0x22, 0xe2, 0xb4, 0xb4, 0xf4, 0x9b, 0x42, 0x07, 0x7a, 0x73, 0x19,
	0x45, 0x41, 0xcc, 0x9d, 0xb6, 0x56, 0x2b, 0x88, 0x17, 0xd0, 0x59, 0x7f, 0x90, 0x10, 0x4e, 0x47,
	0xf3, 0x06, 0xb0, 0x2b, 0xb0, 0x4d, 0xff, 0x8a, 0xb2, 0x5c, 0x28, 0x1c, 0x41, 0x77, 0xad, 0x02,
	0x95, 0x67, 0xfa, 0x25, 0x9d, 0x55, 0x89, 0xd8, 0x3d, 0x80, 0xf1, 0x3d, 0x87, 0x99, 0xc2, 0x6b,
	0xe8, 0x19, 0x7f, 0x61, 0x6b, 0x4d, 0x06, 0xb3, 0x53, 0xaf, 0xfc, 0x2b, 0x5e, 0x39, 0xad, 0xd2,
	0x67, 0xdf, 0x16, 0x0c, 0x0d, 0xb7, 0x8c, 0x79, 0x22, 0xc3, 0x58, 0xe1, 0x0d, 0xf4, 0x9f, 0x48,
	0x95, 0x6b, 0x9f, 0xd5, 0x92, 0x3e, 0x77, 0xeb, 0xc3, 0x58, 0x03, 0xef, 0x60, 0x50, 0x14, 0x1b,
	0x9c, 0xe1, 0xf0, 0xe0, 0x78, 0xcd, 0x29, 0xdd, 0xbb, 0xe7, 0xb5, 0x44, 0xe1, 0xd5, 0x29, 0x7b,
	0x9e, 0x52, 0xa0, 0xa8, 0xec, 0xaa, 0x0f, 0x76, 0xff, 0x96, 0xb3, 0x06, 0xce, 0xc0, 0x7e, 0x4b,
	0xf8, 0x3f, 0xa9, 0x23, 0xef, 0x7b, 0x00, 0x7b, 0x41, 0x82, 0x0e, 0x99, 0x23, 0x5b, 0x8d, 0x3c,
	0x73, 0x23, 0x5e, 0x75, 0x23, 0xde, 0xb2, 0xb8, 0x11, 0xd6, 0xd8, 0x74, 0x35, 0x73, 0xfb, 0x13,
	0x00, 0x00, 0xff, 0xff, 0x0d, 0xe1, 0x5f, 0x7c, 0x68, 0x02, 0x00, 0x00,
}
