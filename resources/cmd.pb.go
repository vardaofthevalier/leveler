// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cmd.proto

/*
Package resources is a generated protocol buffer package.

It is generated from these files:
	cmd.proto
	pipeline.proto
	integration.proto
	data.proto
	user.proto
	repository.proto
	resources.proto

It has these top-level messages:
	ResourceCmdConfig
	FileSource
	OptionsSource
	CmdConfig
	SubCmdConfig
	Option
	PipelineIntegration
	PipelineInput
	PipelineOutput
	Job
	JobsList
	Pipeline
	PipelinesList
	Integration
	IntegrationsList
	BitbucketAccessConfig
	GithubAccessConfig
	AWSAccessConfig
	BuildEnvironmentConfig
	NexusAccessConfig
	SlackAccessConfig
	User
	UserCredentials
	Repository
	RepositoriesList
	Query
	Loggable
	Log
*/
package resources

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Operation int32

const (
	Operation_create Operation = 0
	Operation_get    Operation = 1
	Operation_list   Operation = 2
	Operation_update Operation = 3
	Operation_patch  Operation = 4
	Operation_delete Operation = 5
	Operation_apply  Operation = 6
	Operation_add    Operation = 7
	Operation_remove Operation = 8
	Operation_run    Operation = 9
	Operation_cancel Operation = 10
)

var Operation_name = map[int32]string{
	0:  "create",
	1:  "get",
	2:  "list",
	3:  "update",
	4:  "patch",
	5:  "delete",
	6:  "apply",
	7:  "add",
	8:  "remove",
	9:  "run",
	10: "cancel",
}
var Operation_value = map[string]int32{
	"create": 0,
	"get":    1,
	"list":   2,
	"update": 3,
	"patch":  4,
	"delete": 5,
	"apply":  6,
	"add":    7,
	"remove": 8,
	"run":    9,
	"cancel": 10,
}

func (x Operation) Enum() *Operation {
	p := new(Operation)
	*p = x
	return p
}
func (x Operation) String() string {
	return proto.EnumName(Operation_name, int32(x))
}
func (x *Operation) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Operation_value, data, "Operation")
	if err != nil {
		return err
	}
	*x = Operation(value)
	return nil
}
func (Operation) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ResourceCmdConfig struct {
	Version          *string      `protobuf:"bytes,1,req,name=Version" json:"Version,omitempty"`
	Resources        []*CmdConfig `protobuf:"bytes,2,rep,name=Resources" json:"Resources,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ResourceCmdConfig) Reset()                    { *m = ResourceCmdConfig{} }
func (m *ResourceCmdConfig) String() string            { return proto.CompactTextString(m) }
func (*ResourceCmdConfig) ProtoMessage()               {}
func (*ResourceCmdConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ResourceCmdConfig) GetVersion() string {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return ""
}

func (m *ResourceCmdConfig) GetResources() []*CmdConfig {
	if m != nil {
		return m.Resources
	}
	return nil
}

type FileSource struct {
	MergeOptions     []*Option `protobuf:"bytes,1,rep,name=MergeOptions" json:"MergeOptions,omitempty"`
	Required         []string  `protobuf:"bytes,2,rep,name=Required" json:"Required,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *FileSource) Reset()                    { *m = FileSource{} }
func (m *FileSource) String() string            { return proto.CompactTextString(m) }
func (*FileSource) ProtoMessage()               {}
func (*FileSource) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *FileSource) GetMergeOptions() []*Option {
	if m != nil {
		return m.MergeOptions
	}
	return nil
}

func (m *FileSource) GetRequired() []string {
	if m != nil {
		return m.Required
	}
	return nil
}

type OptionsSource struct {
	Options          []*Option       `protobuf:"bytes,1,rep,name=Options" json:"Options,omitempty"`
	Subcommands      []*SubCmdConfig `protobuf:"bytes,2,rep,name=Subcommands" json:"Subcommands,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *OptionsSource) Reset()                    { *m = OptionsSource{} }
func (m *OptionsSource) String() string            { return proto.CompactTextString(m) }
func (*OptionsSource) ProtoMessage()               {}
func (*OptionsSource) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *OptionsSource) GetOptions() []*Option {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *OptionsSource) GetSubcommands() []*SubCmdConfig {
	if m != nil {
		return m.Subcommands
	}
	return nil
}

type CmdConfig struct {
	Name                *string     `protobuf:"bytes,1,req,name=Name" json:"Name,omitempty"`
	Usage               *string     `protobuf:"bytes,2,req,name=Usage" json:"Usage,omitempty"`
	ShortDescription    *string     `protobuf:"bytes,3,req,name=ShortDescription" json:"ShortDescription,omitempty"`
	LongDescription     *string     `protobuf:"bytes,4,req,name=LongDescription" json:"LongDescription,omitempty"`
	SupportedOperations []Operation `protobuf:"varint,5,rep,name=SupportedOperations,enum=resources.Operation" json:"SupportedOperations,omitempty"`
	// Types that are valid to be assigned to Source:
	//	*CmdConfig_FromFile
	//	*CmdConfig_FromOptions
	Source           isCmdConfig_Source `protobuf_oneof:"source"`
	ProtobufType     *string            `protobuf:"bytes,9,req,name=ProtobufType" json:"ProtobufType,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *CmdConfig) Reset()                    { *m = CmdConfig{} }
func (m *CmdConfig) String() string            { return proto.CompactTextString(m) }
func (*CmdConfig) ProtoMessage()               {}
func (*CmdConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type isCmdConfig_Source interface {
	isCmdConfig_Source()
}

type CmdConfig_FromFile struct {
	FromFile *FileSource `protobuf:"bytes,6,opt,name=FromFile,oneof"`
}
type CmdConfig_FromOptions struct {
	FromOptions *OptionsSource `protobuf:"bytes,7,opt,name=FromOptions,oneof"`
}

func (*CmdConfig_FromFile) isCmdConfig_Source()    {}
func (*CmdConfig_FromOptions) isCmdConfig_Source() {}

func (m *CmdConfig) GetSource() isCmdConfig_Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *CmdConfig) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CmdConfig) GetUsage() string {
	if m != nil && m.Usage != nil {
		return *m.Usage
	}
	return ""
}

func (m *CmdConfig) GetShortDescription() string {
	if m != nil && m.ShortDescription != nil {
		return *m.ShortDescription
	}
	return ""
}

func (m *CmdConfig) GetLongDescription() string {
	if m != nil && m.LongDescription != nil {
		return *m.LongDescription
	}
	return ""
}

func (m *CmdConfig) GetSupportedOperations() []Operation {
	if m != nil {
		return m.SupportedOperations
	}
	return nil
}

func (m *CmdConfig) GetFromFile() *FileSource {
	if x, ok := m.GetSource().(*CmdConfig_FromFile); ok {
		return x.FromFile
	}
	return nil
}

func (m *CmdConfig) GetFromOptions() *OptionsSource {
	if x, ok := m.GetSource().(*CmdConfig_FromOptions); ok {
		return x.FromOptions
	}
	return nil
}

func (m *CmdConfig) GetProtobufType() string {
	if m != nil && m.ProtobufType != nil {
		return *m.ProtobufType
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*CmdConfig) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _CmdConfig_OneofMarshaler, _CmdConfig_OneofUnmarshaler, _CmdConfig_OneofSizer, []interface{}{
		(*CmdConfig_FromFile)(nil),
		(*CmdConfig_FromOptions)(nil),
	}
}

func _CmdConfig_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*CmdConfig)
	// source
	switch x := m.Source.(type) {
	case *CmdConfig_FromFile:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.FromFile); err != nil {
			return err
		}
	case *CmdConfig_FromOptions:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.FromOptions); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("CmdConfig.Source has unexpected type %T", x)
	}
	return nil
}

func _CmdConfig_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*CmdConfig)
	switch tag {
	case 6: // source.FromFile
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FileSource)
		err := b.DecodeMessage(msg)
		m.Source = &CmdConfig_FromFile{msg}
		return true, err
	case 7: // source.FromOptions
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(OptionsSource)
		err := b.DecodeMessage(msg)
		m.Source = &CmdConfig_FromOptions{msg}
		return true, err
	default:
		return false, nil
	}
}

func _CmdConfig_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*CmdConfig)
	// source
	switch x := m.Source.(type) {
	case *CmdConfig_FromFile:
		s := proto.Size(x.FromFile)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CmdConfig_FromOptions:
		s := proto.Size(x.FromOptions)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type SubCmdConfig struct {
	Name             *string   `protobuf:"bytes,1,req,name=Name" json:"Name,omitempty"`
	Usage            *string   `protobuf:"bytes,2,req,name=Usage" json:"Usage,omitempty"`
	ShortDescription *string   `protobuf:"bytes,3,req,name=ShortDescription" json:"ShortDescription,omitempty"`
	LongDescription  *string   `protobuf:"bytes,4,req,name=LongDescription" json:"LongDescription,omitempty"`
	Options          []*Option `protobuf:"bytes,5,rep,name=Options" json:"Options,omitempty"`
	ProtobufType     *string   `protobuf:"bytes,6,req,name=ProtobufType" json:"ProtobufType,omitempty"`
	ParentField      *string   `protobuf:"bytes,7,req,name=ParentField" json:"ParentField,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *SubCmdConfig) Reset()                    { *m = SubCmdConfig{} }
func (m *SubCmdConfig) String() string            { return proto.CompactTextString(m) }
func (*SubCmdConfig) ProtoMessage()               {}
func (*SubCmdConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *SubCmdConfig) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *SubCmdConfig) GetUsage() string {
	if m != nil && m.Usage != nil {
		return *m.Usage
	}
	return ""
}

func (m *SubCmdConfig) GetShortDescription() string {
	if m != nil && m.ShortDescription != nil {
		return *m.ShortDescription
	}
	return ""
}

func (m *SubCmdConfig) GetLongDescription() string {
	if m != nil && m.LongDescription != nil {
		return *m.LongDescription
	}
	return ""
}

func (m *SubCmdConfig) GetOptions() []*Option {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *SubCmdConfig) GetProtobufType() string {
	if m != nil && m.ProtobufType != nil {
		return *m.ProtobufType
	}
	return ""
}

func (m *SubCmdConfig) GetParentField() string {
	if m != nil && m.ParentField != nil {
		return *m.ParentField
	}
	return ""
}

type Option struct {
	Name             *string  `protobuf:"bytes,1,req,name=Name" json:"Name,omitempty"`
	Required         []string `protobuf:"bytes,2,rep,name=Required" json:"Required,omitempty"`
	Description      *string  `protobuf:"bytes,3,req,name=Description" json:"Description,omitempty"`
	Type             *string  `protobuf:"bytes,4,req,name=Type" json:"Type,omitempty"`
	Default          *string  `protobuf:"bytes,5,opt,name=Default" json:"Default,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Option) Reset()                    { *m = Option{} }
func (m *Option) String() string            { return proto.CompactTextString(m) }
func (*Option) ProtoMessage()               {}
func (*Option) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Option) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Option) GetRequired() []string {
	if m != nil {
		return m.Required
	}
	return nil
}

func (m *Option) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *Option) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *Option) GetDefault() string {
	if m != nil && m.Default != nil {
		return *m.Default
	}
	return ""
}

func init() {
	proto.RegisterType((*ResourceCmdConfig)(nil), "resources.ResourceCmdConfig")
	proto.RegisterType((*FileSource)(nil), "resources.FileSource")
	proto.RegisterType((*OptionsSource)(nil), "resources.OptionsSource")
	proto.RegisterType((*CmdConfig)(nil), "resources.CmdConfig")
	proto.RegisterType((*SubCmdConfig)(nil), "resources.SubCmdConfig")
	proto.RegisterType((*Option)(nil), "resources.Option")
	proto.RegisterEnum("resources.Operation", Operation_name, Operation_value)
}

func init() { proto.RegisterFile("cmd.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 528 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x54, 0x41, 0x6f, 0xd3, 0x4c,
	0x10, 0xad, 0x9d, 0xd8, 0x8e, 0x27, 0xf9, 0x3e, 0xb6, 0x4b, 0x11, 0x2b, 0x4e, 0x96, 0x4f, 0x51,
	0x91, 0x72, 0x08, 0xe2, 0x80, 0xc4, 0x89, 0x56, 0x11, 0x07, 0xa0, 0x95, 0x03, 0x5c, 0xd1, 0xc6,
	0x9e, 0xa4, 0x96, 0x6c, 0xaf, 0x59, 0xaf, 0x41, 0x3d, 0xc2, 0x89, 0x1f, 0xcc, 0x0f, 0x40, 0xbb,
	0x4e, 0x9c, 0x4d, 0x53, 0xd1, 0x23, 0xb7, 0x9d, 0x37, 0x6f, 0xde, 0xfa, 0xcd, 0x8c, 0x17, 0xc2,
	0xb4, 0xcc, 0x66, 0xb5, 0x14, 0x4a, 0xd0, 0x50, 0x62, 0x23, 0x5a, 0x99, 0x62, 0x13, 0x73, 0x38,
	0x4d, 0xb6, 0xc1, 0x45, 0x99, 0x5d, 0x88, 0x6a, 0x9d, 0x6f, 0x28, 0x83, 0xe0, 0x33, 0xca, 0x26,
	0x17, 0x15, 0x73, 0x22, 0x77, 0x1a, 0x26, 0xbb, 0x90, 0xce, 0x21, 0xdc, 0xd1, 0x1b, 0xe6, 0x46,
	0x83, 0xe9, 0x78, 0x7e, 0x36, 0xeb, 0xd5, 0x66, 0xbd, 0x44, 0xb2, 0xa7, 0xc5, 0x5f, 0x00, 0x16,
	0x79, 0x81, 0x4b, 0x13, 0xd2, 0x97, 0x30, 0x79, 0x8f, 0x72, 0x83, 0x57, 0xb5, 0xca, 0x45, 0xd5,
	0x30, 0xc7, 0x88, 0x9c, 0x5a, 0x22, 0x5d, 0x26, 0x39, 0xa0, 0xd1, 0x67, 0x30, 0x4a, 0xf0, 0x6b,
	0x9b, 0x4b, 0xcc, 0xcc, 0xbd, 0x61, 0xd2, 0xc7, 0xf1, 0x77, 0xf8, 0x6f, 0x4b, 0xdb, 0xde, 0xf1,
	0x1c, 0x82, 0x07, 0xe5, 0x77, 0x0c, 0xfa, 0x0a, 0xc6, 0xcb, 0x76, 0x95, 0x8a, 0xb2, 0xe4, 0x55,
	0xb6, 0x33, 0xf5, 0xd4, 0x2a, 0x58, 0xb6, 0xab, 0xbd, 0x2f, 0x9b, 0x1b, 0xff, 0x76, 0x21, 0xdc,
	0x77, 0x8d, 0xc2, 0xf0, 0x03, 0x2f, 0x71, 0xdb, 0x32, 0x73, 0xa6, 0x67, 0xe0, 0x7d, 0x6a, 0xf8,
	0x06, 0x99, 0x6b, 0xc0, 0x2e, 0xa0, 0xe7, 0x40, 0x96, 0x37, 0x42, 0xaa, 0x4b, 0x6c, 0x52, 0x99,
	0x9b, 0xef, 0x60, 0x03, 0x43, 0x38, 0xc2, 0xe9, 0x14, 0x1e, 0xbd, 0x13, 0xd5, 0xc6, 0xa6, 0x0e,
	0x0d, 0xf5, 0x2e, 0x4c, 0x17, 0xf0, 0x78, 0xd9, 0xd6, 0xb5, 0x90, 0x0a, 0xb3, 0xab, 0x1a, 0x25,
	0xef, 0x3a, 0xe0, 0x45, 0x83, 0xe9, 0xff, 0x07, 0x53, 0xea, 0x93, 0xc9, 0x7d, 0x05, 0xf4, 0x05,
	0x8c, 0x16, 0x52, 0x94, 0x7a, 0x66, 0xcc, 0x8f, 0x9c, 0xe9, 0x78, 0xfe, 0xc4, 0x2a, 0xde, 0x8f,
	0xf2, 0xed, 0x49, 0xd2, 0x13, 0xe9, 0x6b, 0x18, 0xeb, 0xf3, 0xae, 0xed, 0x81, 0xa9, 0x63, 0x47,
	0x6d, 0x6f, 0xfa, 0x52, 0x9b, 0x4e, 0x63, 0x98, 0x5c, 0xeb, 0xcd, 0x5c, 0xb5, 0xeb, 0x8f, 0xb7,
	0x35, 0xb2, 0xd0, 0x38, 0x3c, 0xc0, 0xde, 0x8c, 0xc0, 0xef, 0xb4, 0xe2, 0x1f, 0x2e, 0x4c, 0xec,
	0xa1, 0xfc, 0xf3, 0xce, 0x5b, 0xfb, 0xe6, 0x3d, 0xb8, 0x6f, 0x77, 0xbd, 0xfa, 0xc7, 0x5e, 0x69,
	0x04, 0xe3, 0x6b, 0x2e, 0xb1, 0x52, 0x8b, 0x1c, 0x8b, 0x8c, 0x05, 0x86, 0x62, 0x43, 0xf1, 0x2f,
	0x07, 0xfc, 0x4e, 0xf1, 0x5e, 0xf7, 0x7f, 0xf9, 0x5d, 0xb4, 0xf8, 0xb1, 0x7d, 0x1b, 0xd2, 0x8a,
	0xe6, 0xd3, 0x3a, 0xbb, 0xe6, 0xac, 0xdf, 0x84, 0x4b, 0x5c, 0xf3, 0xb6, 0x50, 0xcc, 0x8b, 0x1c,
	0xfd, 0x26, 0x6c, 0xc3, 0xf3, 0x9f, 0x0e, 0x84, 0xfd, 0xfa, 0x50, 0x00, 0x3f, 0x95, 0xc8, 0x15,
	0x92, 0x13, 0x1a, 0xc0, 0x60, 0x83, 0x8a, 0x38, 0x74, 0x04, 0xc3, 0x22, 0x6f, 0x14, 0x71, 0x75,
	0xba, 0xad, 0x33, 0x9d, 0x1e, 0xd0, 0x10, 0xbc, 0x9a, 0xab, 0xf4, 0x86, 0x0c, 0x35, 0x9c, 0x61,
	0x81, 0x0a, 0x89, 0xa7, 0x61, 0x5e, 0xd7, 0xc5, 0x2d, 0xf1, 0xb5, 0x00, 0xcf, 0x32, 0x12, 0xe8,
	0xbc, 0xc4, 0x52, 0x7c, 0x43, 0x32, 0xd2, 0xa0, 0x6c, 0x2b, 0x12, 0x9a, 0xab, 0x78, 0x95, 0x62,
	0x41, 0xe0, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4d, 0xe2, 0x02, 0xaf, 0xde, 0x04, 0x00, 0x00,
}
