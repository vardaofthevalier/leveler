// Code generated by protoc-gen-go. DO NOT EDIT.
// source: resources.proto

package leveler

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/any"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Query struct {
	Query string `protobuf:"bytes,1,opt,name=Query" json:"Query,omitempty"`
}

func (m *Query) Reset()                    { *m = Query{} }
func (m *Query) String() string            { return proto.CompactTextString(m) }
func (*Query) ProtoMessage()               {}
func (*Query) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *Query) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

type ResourceId struct {
	Id string `protobuf:"bytes,1,opt,name=Id" json:"Id,omitempty"`
}

func (m *ResourceId) Reset()                    { *m = ResourceId{} }
func (m *ResourceId) String() string            { return proto.CompactTextString(m) }
func (*ResourceId) ProtoMessage()               {}
func (*ResourceId) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *ResourceId) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ResourceList struct {
	Results []*google_protobuf.Any `protobuf:"bytes,1,rep,name=Results" json:"Results,omitempty"`
}

func (m *ResourceList) Reset()                    { *m = ResourceList{} }
func (m *ResourceList) String() string            { return proto.CompactTextString(m) }
func (*ResourceList) ProtoMessage()               {}
func (*ResourceList) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *ResourceList) GetResults() []*google_protobuf.Any {
	if m != nil {
		return m.Results
	}
	return nil
}

type ResourceResult struct {
	Status int32 `protobuf:"varint,1,opt,name=Status" json:"Status,omitempty"`
	// Types that are valid to be assigned to Results:
	//	*ResourceResult_List
	//	*ResourceResult_Id
	Results isResourceResult_Results `protobuf_oneof:"results"`
}

func (m *ResourceResult) Reset()                    { *m = ResourceResult{} }
func (m *ResourceResult) String() string            { return proto.CompactTextString(m) }
func (*ResourceResult) ProtoMessage()               {}
func (*ResourceResult) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

type isResourceResult_Results interface {
	isResourceResult_Results()
}

type ResourceResult_List struct {
	List *ResourceList `protobuf:"bytes,2,opt,name=List,oneof"`
}
type ResourceResult_Id struct {
	Id *ResourceId `protobuf:"bytes,3,opt,name=Id,oneof"`
}

func (*ResourceResult_List) isResourceResult_Results() {}
func (*ResourceResult_Id) isResourceResult_Results()   {}

func (m *ResourceResult) GetResults() isResourceResult_Results {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *ResourceResult) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ResourceResult) GetList() *ResourceList {
	if x, ok := m.GetResults().(*ResourceResult_List); ok {
		return x.List
	}
	return nil
}

func (m *ResourceResult) GetId() *ResourceId {
	if x, ok := m.GetResults().(*ResourceResult_Id); ok {
		return x.Id
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ResourceResult) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ResourceResult_OneofMarshaler, _ResourceResult_OneofUnmarshaler, _ResourceResult_OneofSizer, []interface{}{
		(*ResourceResult_List)(nil),
		(*ResourceResult_Id)(nil),
	}
}

func _ResourceResult_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ResourceResult)
	// results
	switch x := m.Results.(type) {
	case *ResourceResult_List:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.List); err != nil {
			return err
		}
	case *ResourceResult_Id:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Id); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ResourceResult.Results has unexpected type %T", x)
	}
	return nil
}

func _ResourceResult_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ResourceResult)
	switch tag {
	case 2: // results.List
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResourceList)
		err := b.DecodeMessage(msg)
		m.Results = &ResourceResult_List{msg}
		return true, err
	case 3: // results.Id
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResourceId)
		err := b.DecodeMessage(msg)
		m.Results = &ResourceResult_Id{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ResourceResult_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ResourceResult)
	// results
	switch x := m.Results.(type) {
	case *ResourceResult_List:
		s := proto.Size(x.List)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceResult_Id:
		s := proto.Size(x.Id)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*Query)(nil), "leveler.Query")
	proto.RegisterType((*ResourceId)(nil), "leveler.ResourceId")
	proto.RegisterType((*ResourceList)(nil), "leveler.ResourceList")
	proto.RegisterType((*ResourceResult)(nil), "leveler.ResourceResult")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ResourceEndpoint service

type ResourceEndpointClient interface {
	GetResource(ctx context.Context, in *ResourceId, opts ...grpc.CallOption) (*ResourceResult, error)
	ListResources(ctx context.Context, in *Query, opts ...grpc.CallOption) (*ResourceResult, error)
	CreateResource(ctx context.Context, in *google_protobuf.Any, opts ...grpc.CallOption) (*ResourceResult, error)
	UpdateResource(ctx context.Context, in *google_protobuf.Any, opts ...grpc.CallOption) (*ResourceResult, error)
	DeleteResource(ctx context.Context, in *ResourceId, opts ...grpc.CallOption) (*ResourceResult, error)
}

type resourceEndpointClient struct {
	cc *grpc.ClientConn
}

func NewResourceEndpointClient(cc *grpc.ClientConn) ResourceEndpointClient {
	return &resourceEndpointClient{cc}
}

func (c *resourceEndpointClient) GetResource(ctx context.Context, in *ResourceId, opts ...grpc.CallOption) (*ResourceResult, error) {
	out := new(ResourceResult)
	err := grpc.Invoke(ctx, "/leveler.ResourceEndpoint/GetResource", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceEndpointClient) ListResources(ctx context.Context, in *Query, opts ...grpc.CallOption) (*ResourceResult, error) {
	out := new(ResourceResult)
	err := grpc.Invoke(ctx, "/leveler.ResourceEndpoint/ListResources", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceEndpointClient) CreateResource(ctx context.Context, in *google_protobuf.Any, opts ...grpc.CallOption) (*ResourceResult, error) {
	out := new(ResourceResult)
	err := grpc.Invoke(ctx, "/leveler.ResourceEndpoint/CreateResource", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceEndpointClient) UpdateResource(ctx context.Context, in *google_protobuf.Any, opts ...grpc.CallOption) (*ResourceResult, error) {
	out := new(ResourceResult)
	err := grpc.Invoke(ctx, "/leveler.ResourceEndpoint/UpdateResource", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceEndpointClient) DeleteResource(ctx context.Context, in *ResourceId, opts ...grpc.CallOption) (*ResourceResult, error) {
	out := new(ResourceResult)
	err := grpc.Invoke(ctx, "/leveler.ResourceEndpoint/DeleteResource", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ResourceEndpoint service

type ResourceEndpointServer interface {
	GetResource(context.Context, *ResourceId) (*ResourceResult, error)
	ListResources(context.Context, *Query) (*ResourceResult, error)
	CreateResource(context.Context, *google_protobuf.Any) (*ResourceResult, error)
	UpdateResource(context.Context, *google_protobuf.Any) (*ResourceResult, error)
	DeleteResource(context.Context, *ResourceId) (*ResourceResult, error)
}

func RegisterResourceEndpointServer(s *grpc.Server, srv ResourceEndpointServer) {
	s.RegisterService(&_ResourceEndpoint_serviceDesc, srv)
}

func _ResourceEndpoint_GetResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResourceId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceEndpointServer).GetResource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/leveler.ResourceEndpoint/GetResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceEndpointServer).GetResource(ctx, req.(*ResourceId))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceEndpoint_ListResources_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceEndpointServer).ListResources(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/leveler.ResourceEndpoint/ListResources",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceEndpointServer).ListResources(ctx, req.(*Query))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceEndpoint_CreateResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf.Any)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceEndpointServer).CreateResource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/leveler.ResourceEndpoint/CreateResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceEndpointServer).CreateResource(ctx, req.(*google_protobuf.Any))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceEndpoint_UpdateResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf.Any)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceEndpointServer).UpdateResource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/leveler.ResourceEndpoint/UpdateResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceEndpointServer).UpdateResource(ctx, req.(*google_protobuf.Any))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceEndpoint_DeleteResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResourceId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceEndpointServer).DeleteResource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/leveler.ResourceEndpoint/DeleteResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceEndpointServer).DeleteResource(ctx, req.(*ResourceId))
	}
	return interceptor(ctx, in, info, handler)
}

var _ResourceEndpoint_serviceDesc = grpc.ServiceDesc{
	ServiceName: "leveler.ResourceEndpoint",
	HandlerType: (*ResourceEndpointServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetResource",
			Handler:    _ResourceEndpoint_GetResource_Handler,
		},
		{
			MethodName: "ListResources",
			Handler:    _ResourceEndpoint_ListResources_Handler,
		},
		{
			MethodName: "CreateResource",
			Handler:    _ResourceEndpoint_CreateResource_Handler,
		},
		{
			MethodName: "UpdateResource",
			Handler:    _ResourceEndpoint_UpdateResource_Handler,
		},
		{
			MethodName: "DeleteResource",
			Handler:    _ResourceEndpoint_DeleteResource_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "resources.proto",
}

func init() { proto.RegisterFile("resources.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 314 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x90, 0xef, 0x4a, 0xc3, 0x30,
	0x14, 0xc5, 0xd7, 0xce, 0x6d, 0xec, 0x4e, 0xab, 0xc4, 0xa9, 0x73, 0x28, 0x8c, 0x82, 0x30, 0x10,
	0x32, 0x98, 0xdf, 0x04, 0xc5, 0xf9, 0x07, 0x57, 0xf0, 0x8b, 0x11, 0x1f, 0xa0, 0x33, 0xd7, 0x31,
	0x28, 0x4d, 0x49, 0x52, 0xa1, 0x4f, 0xe0, 0x13, 0xfa, 0x3e, 0xd2, 0xa4, 0x19, 0x83, 0x0d, 0x45,
	0xfc, 0xd6, 0x9c, 0x7b, 0x7a, 0x7e, 0xe7, 0x5e, 0xd8, 0x95, 0xa8, 0x44, 0x2e, 0xdf, 0x50, 0xd1,
	0x4c, 0x0a, 0x2d, 0x48, 0x2b, 0xc1, 0x0f, 0x4c, 0x50, 0xf6, 0x8f, 0xe7, 0x42, 0xcc, 0x13, 0x1c,
	0x19, 0x79, 0x96, 0xbf, 0x8f, 0xe2, 0xb4, 0xb0, 0x9e, 0xf0, 0x14, 0x1a, 0xcf, 0x39, 0xca, 0x82,
	0x74, 0xab, 0x8f, 0x9e, 0x37, 0xf0, 0x86, 0x6d, 0x66, 0x1f, 0xe1, 0x09, 0x00, 0xab, 0x52, 0x23,
	0x4e, 0x02, 0xf0, 0x23, 0x5e, 0x19, 0xfc, 0x88, 0x87, 0xd7, 0xb0, 0xed, 0xa6, 0x4f, 0x0b, 0xa5,
	0x09, 0x85, 0x16, 0x43, 0x95, 0x27, 0x5a, 0xf5, 0xbc, 0x41, 0x7d, 0xd8, 0x19, 0x77, 0xa9, 0x25,
	0x53, 0x47, 0xa6, 0x93, 0xb4, 0x60, 0xce, 0x14, 0x7e, 0x7a, 0x10, 0xb8, 0x00, 0xab, 0x91, 0x43,
	0x68, 0xbe, 0xe8, 0x58, 0xe7, 0xca, 0x60, 0x1a, 0xac, 0x7a, 0x91, 0x73, 0xd8, 0x2a, 0x11, 0x3d,
	0x7f, 0xe0, 0x0d, 0x3b, 0xe3, 0x03, 0x5a, 0xad, 0x46, 0x57, 0xf9, 0xd3, 0x1a, 0x33, 0x26, 0x72,
	0x66, 0x7a, 0xd6, 0x8d, 0x75, 0x7f, 0xcd, 0x1a, 0xf1, 0x69, 0xad, 0xac, 0x7f, 0xdb, 0x86, 0x96,
	0xb4, 0x4d, 0xc6, 0x5f, 0x3e, 0xec, 0xb9, 0xf9, 0x43, 0xca, 0x33, 0xb1, 0x48, 0x35, 0xb9, 0x82,
	0xce, 0x23, 0x6a, 0x27, 0x93, 0x4d, 0x49, 0xfd, 0xa3, 0x35, 0xd1, 0x2e, 0x12, 0xd6, 0xc8, 0x25,
	0xec, 0x94, 0x6d, 0x9c, 0xae, 0x48, 0xb0, 0xf4, 0x9a, 0xe3, 0xfe, 0xf4, 0xef, 0x04, 0x82, 0x3b,
	0x89, 0xb1, 0xc6, 0x25, 0x7d, 0xe3, 0x29, 0x7f, 0x89, 0x78, 0xcd, 0xf8, 0xbf, 0x22, 0x6e, 0x20,
	0xb8, 0xc7, 0x04, 0x57, 0x22, 0xfe, 0x78, 0x83, 0x59, 0xd3, 0xa0, 0x2e, 0xbe, 0x03, 0x00, 0x00,
	0xff, 0xff, 0x66, 0xde, 0xd6, 0x5d, 0x9c, 0x02, 0x00, 0x00,
}
