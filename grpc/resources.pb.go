// Code generated by protoc-gen-go. DO NOT EDIT.
// source: resources.proto

/*
Package grpc is a generated protocol buffer package.

It is generated from these files:
	resources.proto

It has these top-level messages:
	Query
	Resource
	ResourceId
	ResourceList
*/
package grpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/any"
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc1 "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Query struct {
	Query string `protobuf:"bytes,1,opt,name=Query" json:"Query,omitempty"`
	Type  string `protobuf:"bytes,2,opt,name=Type" json:"Type,omitempty"`
}

func (m *Query) Reset()                    { *m = Query{} }
func (m *Query) String() string            { return proto.CompactTextString(m) }
func (*Query) ProtoMessage()               {}
func (*Query) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Query) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *Query) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type Resource struct {
	Type    string               `protobuf:"bytes,1,opt,name=Type" json:"Type,omitempty"`
	Id      string               `protobuf:"bytes,2,opt,name=Id" json:"Id,omitempty"`
	Details *google_protobuf.Any `protobuf:"bytes,3,opt,name=Details" json:"Details,omitempty"`
}

func (m *Resource) Reset()                    { *m = Resource{} }
func (m *Resource) String() string            { return proto.CompactTextString(m) }
func (*Resource) ProtoMessage()               {}
func (*Resource) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Resource) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Resource) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Resource) GetDetails() *google_protobuf.Any {
	if m != nil {
		return m.Details
	}
	return nil
}

type ResourceId struct {
	Id   string `protobuf:"bytes,1,opt,name=Id" json:"Id,omitempty"`
	Type string `protobuf:"bytes,2,opt,name=Type" json:"Type,omitempty"`
}

func (m *ResourceId) Reset()                    { *m = ResourceId{} }
func (m *ResourceId) String() string            { return proto.CompactTextString(m) }
func (*ResourceId) ProtoMessage()               {}
func (*ResourceId) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ResourceId) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ResourceId) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type ResourceList struct {
	Results []*Resource `protobuf:"bytes,1,rep,name=Results" json:"Results,omitempty"`
}

func (m *ResourceList) Reset()                    { *m = ResourceList{} }
func (m *ResourceList) String() string            { return proto.CompactTextString(m) }
func (*ResourceList) ProtoMessage()               {}
func (*ResourceList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ResourceList) GetResults() []*Resource {
	if m != nil {
		return m.Results
	}
	return nil
}

func init() {
	proto.RegisterType((*Query)(nil), "grpc.Query")
	proto.RegisterType((*Resource)(nil), "grpc.Resource")
	proto.RegisterType((*ResourceId)(nil), "grpc.ResourceId")
	proto.RegisterType((*ResourceList)(nil), "grpc.ResourceList")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc1.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc1.SupportPackageIsVersion4

// Client API for ResourceEndpoint service

type ResourceEndpointClient interface {
	GetResource(ctx context.Context, in *ResourceId, opts ...grpc1.CallOption) (*Resource, error)
	ListResources(ctx context.Context, in *Query, opts ...grpc1.CallOption) (*ResourceList, error)
	CreateResource(ctx context.Context, in *Resource, opts ...grpc1.CallOption) (*ResourceId, error)
	UpdateResource(ctx context.Context, in *Resource, opts ...grpc1.CallOption) (*google_protobuf1.Empty, error)
	DeleteResource(ctx context.Context, in *ResourceId, opts ...grpc1.CallOption) (*google_protobuf1.Empty, error)
}

type resourceEndpointClient struct {
	cc *grpc1.ClientConn
}

func NewResourceEndpointClient(cc *grpc1.ClientConn) ResourceEndpointClient {
	return &resourceEndpointClient{cc}
}

func (c *resourceEndpointClient) GetResource(ctx context.Context, in *ResourceId, opts ...grpc1.CallOption) (*Resource, error) {
	out := new(Resource)
	err := grpc1.Invoke(ctx, "/grpc.ResourceEndpoint/GetResource", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceEndpointClient) ListResources(ctx context.Context, in *Query, opts ...grpc1.CallOption) (*ResourceList, error) {
	out := new(ResourceList)
	err := grpc1.Invoke(ctx, "/grpc.ResourceEndpoint/ListResources", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceEndpointClient) CreateResource(ctx context.Context, in *Resource, opts ...grpc1.CallOption) (*ResourceId, error) {
	out := new(ResourceId)
	err := grpc1.Invoke(ctx, "/grpc.ResourceEndpoint/CreateResource", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceEndpointClient) UpdateResource(ctx context.Context, in *Resource, opts ...grpc1.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc1.Invoke(ctx, "/grpc.ResourceEndpoint/UpdateResource", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceEndpointClient) DeleteResource(ctx context.Context, in *ResourceId, opts ...grpc1.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc1.Invoke(ctx, "/grpc.ResourceEndpoint/DeleteResource", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ResourceEndpoint service

type ResourceEndpointServer interface {
	GetResource(context.Context, *ResourceId) (*Resource, error)
	ListResources(context.Context, *Query) (*ResourceList, error)
	CreateResource(context.Context, *Resource) (*ResourceId, error)
	UpdateResource(context.Context, *Resource) (*google_protobuf1.Empty, error)
	DeleteResource(context.Context, *ResourceId) (*google_protobuf1.Empty, error)
}

func RegisterResourceEndpointServer(s *grpc1.Server, srv ResourceEndpointServer) {
	s.RegisterService(&_ResourceEndpoint_serviceDesc, srv)
}

func _ResourceEndpoint_GetResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResourceId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceEndpointServer).GetResource(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.ResourceEndpoint/GetResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceEndpointServer).GetResource(ctx, req.(*ResourceId))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceEndpoint_ListResources_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceEndpointServer).ListResources(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.ResourceEndpoint/ListResources",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceEndpointServer).ListResources(ctx, req.(*Query))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceEndpoint_CreateResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(Resource)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceEndpointServer).CreateResource(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.ResourceEndpoint/CreateResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceEndpointServer).CreateResource(ctx, req.(*Resource))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceEndpoint_UpdateResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(Resource)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceEndpointServer).UpdateResource(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.ResourceEndpoint/UpdateResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceEndpointServer).UpdateResource(ctx, req.(*Resource))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceEndpoint_DeleteResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResourceId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceEndpointServer).DeleteResource(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.ResourceEndpoint/DeleteResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceEndpointServer).DeleteResource(ctx, req.(*ResourceId))
	}
	return interceptor(ctx, in, info, handler)
}

var _ResourceEndpoint_serviceDesc = grpc1.ServiceDesc{
	ServiceName: "grpc.ResourceEndpoint",
	HandlerType: (*ResourceEndpointServer)(nil),
	Methods: []grpc1.MethodDesc{
		{
			MethodName: "GetResource",
			Handler:    _ResourceEndpoint_GetResource_Handler,
		},
		{
			MethodName: "ListResources",
			Handler:    _ResourceEndpoint_ListResources_Handler,
		},
		{
			MethodName: "CreateResource",
			Handler:    _ResourceEndpoint_CreateResource_Handler,
		},
		{
			MethodName: "UpdateResource",
			Handler:    _ResourceEndpoint_UpdateResource_Handler,
		},
		{
			MethodName: "DeleteResource",
			Handler:    _ResourceEndpoint_DeleteResource_Handler,
		},
	},
	Streams:  []grpc1.StreamDesc{},
	Metadata: "resources.proto",
}

func init() { proto.RegisterFile("resources.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 320 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x51, 0x4d, 0x4f, 0xb3, 0x40,
	0x10, 0x06, 0xda, 0xf7, 0xad, 0x0e, 0x8a, 0xcd, 0xa4, 0x31, 0x88, 0x97, 0x66, 0x4f, 0x9c, 0xb6,
	0x16, 0x3d, 0x18, 0xe3, 0xc5, 0xd8, 0xc6, 0x90, 0x78, 0x91, 0xe8, 0xd5, 0xa4, 0x2d, 0x63, 0xd3,
	0x04, 0x81, 0xb0, 0xcb, 0x81, 0x9f, 0xe4, 0xbf, 0x34, 0xd0, 0x5d, 0xb4, 0x45, 0xbd, 0x6d, 0x9e,
	0xaf, 0x79, 0x66, 0x16, 0x4e, 0x0a, 0x12, 0x59, 0x59, 0xac, 0x48, 0xf0, 0xbc, 0xc8, 0x64, 0x86,
	0xfd, 0x75, 0x91, 0xaf, 0xbc, 0xb3, 0x75, 0x96, 0xad, 0x13, 0x9a, 0x34, 0xd8, 0xb2, 0x7c, 0x9b,
	0x2c, 0xd2, 0x6a, 0x2b, 0xf0, 0xce, 0xf7, 0x29, 0x7a, 0xcf, 0xa5, 0x22, 0xd9, 0x14, 0xfe, 0x3d,
	0x95, 0x54, 0x54, 0x38, 0x52, 0x0f, 0xd7, 0x1c, 0x9b, 0xfe, 0x61, 0xa4, 0x50, 0x84, 0xfe, 0x73,
	0x95, 0x93, 0x6b, 0x35, 0x60, 0xf3, 0x66, 0xaf, 0x70, 0x10, 0xa9, 0x0e, 0x2d, 0x6f, 0x7e, 0xf1,
	0xe8, 0x80, 0x15, 0xc6, 0xca, 0x61, 0x85, 0x31, 0x72, 0x18, 0xcc, 0x48, 0x2e, 0x36, 0x89, 0x70,
	0x7b, 0x63, 0xd3, 0xb7, 0x83, 0x11, 0xdf, 0x36, 0xe2, 0xba, 0x11, 0xbf, 0x4b, 0xab, 0x48, 0x8b,
	0xd8, 0x05, 0x80, 0xce, 0x0f, 0x63, 0x95, 0x66, 0xb6, 0x69, 0x3f, 0x35, 0xba, 0x86, 0x23, 0xed,
	0x78, 0xdc, 0x08, 0x89, 0x3e, 0x0c, 0x22, 0x12, 0x65, 0x22, 0x85, 0x6b, 0x8e, 0x7b, 0xbe, 0x1d,
	0x38, 0xbc, 0x3e, 0x12, 0xd7, 0xa2, 0x48, 0xd3, 0xc1, 0x87, 0x05, 0x43, 0x8d, 0xce, 0xd3, 0x38,
	0xcf, 0x36, 0xa9, 0xc4, 0x29, 0xd8, 0x0f, 0x24, 0xdb, 0x1d, 0x87, 0xbb, 0xe6, 0x30, 0xf6, 0xf6,
	0xe2, 0x98, 0x81, 0x01, 0x1c, 0xd7, 0x93, 0x35, 0x22, 0xd0, 0xde, 0x4a, 0x9a, 0x2b, 0x7a, 0xb8,
	0xab, 0xaf, 0x95, 0xcc, 0xc0, 0x2b, 0x70, 0xee, 0x0b, 0x5a, 0x48, 0x6a, 0x27, 0xed, 0xe5, 0x7a,
	0x9d, 0xc9, 0xcc, 0xc0, 0x1b, 0x70, 0x5e, 0xf2, 0xf8, 0x2f, 0xd7, 0x69, 0xe7, 0xbc, 0xf3, 0xfa,
	0xc3, 0x99, 0x81, 0xb7, 0xe0, 0xcc, 0x28, 0xa1, 0x6f, 0xde, 0xee, 0x6e, 0xbf, 0xba, 0x97, 0xff,
	0x1b, 0xe4, 0xf2, 0x33, 0x00, 0x00, 0xff, 0xff, 0x41, 0xf6, 0x09, 0x86, 0x82, 0x02, 0x00, 0x00,
}
