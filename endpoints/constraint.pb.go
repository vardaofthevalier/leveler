// Code generated by protoc-gen-go. DO NOT EDIT.
// source: constraint.proto

package leveler

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Architecture int32

const (
	Architecture_AMD64 Architecture = 0
)

var Architecture_name = map[int32]string{
	0: "AMD64",
}
var Architecture_value = map[string]int32{
	"AMD64": 0,
}

func (x Architecture) String() string {
	return proto.EnumName(Architecture_name, int32(x))
}
func (Architecture) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

type OS int32

const (
	OS_UBUNTU OS = 0
	OS_CENTOS OS = 1
)

var OS_name = map[int32]string{
	0: "UBUNTU",
	1: "CENTOS",
}
var OS_value = map[string]int32{
	"UBUNTU": 0,
	"CENTOS": 1,
}

func (x OS) String() string {
	return proto.EnumName(OS_name, int32(x))
}
func (OS) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

type Constraint struct {
	Cpu        int32        `protobuf:"varint,1,opt,name=Cpu" json:"Cpu,omitempty"`
	MemGb      int32        `protobuf:"varint,2,opt,name=MemGb" json:"MemGb,omitempty"`
	DiskSizeGb int32        `protobuf:"varint,3,opt,name=DiskSizeGb" json:"DiskSizeGb,omitempty"`
	Arch       Architecture `protobuf:"varint,4,opt,name=Arch,enum=leveler.Architecture" json:"Arch,omitempty"`
	Os         OS           `protobuf:"varint,5,opt,name=Os,enum=leveler.OS" json:"Os,omitempty"`
	OsVersion  string       `protobuf:"bytes,6,opt,name=OsVersion" json:"OsVersion,omitempty"`
}

func (m *Constraint) Reset()                    { *m = Constraint{} }
func (m *Constraint) String() string            { return proto.CompactTextString(m) }
func (*Constraint) ProtoMessage()               {}
func (*Constraint) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *Constraint) GetCpu() int32 {
	if m != nil {
		return m.Cpu
	}
	return 0
}

func (m *Constraint) GetMemGb() int32 {
	if m != nil {
		return m.MemGb
	}
	return 0
}

func (m *Constraint) GetDiskSizeGb() int32 {
	if m != nil {
		return m.DiskSizeGb
	}
	return 0
}

func (m *Constraint) GetArch() Architecture {
	if m != nil {
		return m.Arch
	}
	return Architecture_AMD64
}

func (m *Constraint) GetOs() OS {
	if m != nil {
		return m.Os
	}
	return OS_UBUNTU
}

func (m *Constraint) GetOsVersion() string {
	if m != nil {
		return m.OsVersion
	}
	return ""
}

func init() {
	proto.RegisterType((*Constraint)(nil), "leveler.Constraint")
	proto.RegisterEnum("leveler.Architecture", Architecture_name, Architecture_value)
	proto.RegisterEnum("leveler.OS", OS_name, OS_value)
}

func init() { proto.RegisterFile("constraint.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 233 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0xbb, 0x69, 0x13, 0xc9, 0x28, 0xb2, 0x0c, 0x0a, 0x2b, 0x16, 0x09, 0x9e, 0x62, 0x0f,
	0x39, 0xa8, 0x78, 0xaf, 0xa9, 0xf4, 0xd4, 0x2e, 0x64, 0x1b, 0xef, 0x26, 0x0c, 0xb8, 0x58, 0xb3,
	0x65, 0x77, 0xeb, 0xc1, 0x47, 0xf3, 0xe9, 0x24, 0xab, 0xb4, 0xb9, 0xfd, 0xf3, 0xfd, 0x1f, 0x33,
	0x30, 0xc0, 0x5b, 0xd3, 0x39, 0x6f, 0xdf, 0x74, 0xe7, 0x8b, 0x9d, 0x35, 0xde, 0xe0, 0xc9, 0x96,
	0xbe, 0x68, 0x4b, 0xf6, 0xf6, 0x87, 0x01, 0x94, 0x87, 0x16, 0x39, 0x8c, 0xcb, 0xdd, 0x5e, 0xb0,
	0x8c, 0xe5, 0x71, 0xd5, 0x47, 0xbc, 0x80, 0x78, 0x45, 0x9f, 0xcb, 0x46, 0x44, 0x81, 0xfd, 0x0d,
	0x78, 0x03, 0xb0, 0xd0, 0xee, 0x43, 0xe9, 0x6f, 0x5a, 0x36, 0x62, 0x1c, 0xaa, 0x01, 0xc1, 0x3b,
	0x98, 0xcc, 0x6d, 0xfb, 0x2e, 0x26, 0x19, 0xcb, 0xcf, 0xef, 0x2f, 0x8b, 0xff, 0x73, 0x45, 0x0f,
	0xb5, 0xa7, 0xd6, 0xef, 0x2d, 0x55, 0x41, 0xc1, 0x6b, 0x88, 0xa4, 0x13, 0x71, 0x10, 0x4f, 0x0f,
	0xa2, 0x54, 0x55, 0x24, 0x1d, 0x4e, 0x21, 0x95, 0xee, 0x95, 0xac, 0xd3, 0xa6, 0x13, 0x49, 0xc6,
	0xf2, 0xb4, 0x3a, 0x82, 0xd9, 0x15, 0x9c, 0x0d, 0x17, 0x62, 0x0a, 0xf1, 0x7c, 0xb5, 0x78, 0x7a,
	0xe4, 0xa3, 0xd9, 0x14, 0x22, 0xa9, 0x10, 0x20, 0xa9, 0x9f, 0xeb, 0xf5, 0xa6, 0xe6, 0xa3, 0x3e,
	0x97, 0x2f, 0xeb, 0x8d, 0x54, 0x9c, 0x35, 0x49, 0xf8, 0xc2, 0xc3, 0x6f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x5b, 0xb9, 0x0d, 0xd2, 0x19, 0x01, 0x00, 0x00,
}
