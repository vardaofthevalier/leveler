// Code generated by protoc-gen-go. DO NOT EDIT.
// source: integration.proto

package pipelines

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Integration struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Types that are valid to be assigned to Config:
	//	*Integration_Bitbucket
	//	*Integration_Github
	//	*Integration_Aws
	//	*Integration_Nexus
	//	*Integration_Slack
	//	*Integration_Local
	//	*Integration_Stream
	Config isIntegration_Config `protobuf_oneof:"config"`
}

func (m *Integration) Reset()                    { *m = Integration{} }
func (m *Integration) String() string            { return proto.CompactTextString(m) }
func (*Integration) ProtoMessage()               {}
func (*Integration) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type isIntegration_Config interface {
	isIntegration_Config()
}

type Integration_Bitbucket struct {
	Bitbucket *BitbucketAccessConfig `protobuf:"bytes,2,opt,name=bitbucket,oneof"`
}
type Integration_Github struct {
	Github *GithubAccessConfig `protobuf:"bytes,3,opt,name=github,oneof"`
}
type Integration_Aws struct {
	Aws *AWSConfig `protobuf:"bytes,4,opt,name=aws,oneof"`
}
type Integration_Nexus struct {
	Nexus *NexusConfig `protobuf:"bytes,5,opt,name=nexus,oneof"`
}
type Integration_Slack struct {
	Slack *SlackConfig `protobuf:"bytes,6,opt,name=slack,oneof"`
}
type Integration_Local struct {
	Local *LocalConfig `protobuf:"bytes,7,opt,name=local,oneof"`
}
type Integration_Stream struct {
	Stream *StreamConfig `protobuf:"bytes,8,opt,name=stream,oneof"`
}

func (*Integration_Bitbucket) isIntegration_Config() {}
func (*Integration_Github) isIntegration_Config()    {}
func (*Integration_Aws) isIntegration_Config()       {}
func (*Integration_Nexus) isIntegration_Config()     {}
func (*Integration_Slack) isIntegration_Config()     {}
func (*Integration_Local) isIntegration_Config()     {}
func (*Integration_Stream) isIntegration_Config()    {}

func (m *Integration) GetConfig() isIntegration_Config {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *Integration) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Integration) GetBitbucket() *BitbucketAccessConfig {
	if x, ok := m.GetConfig().(*Integration_Bitbucket); ok {
		return x.Bitbucket
	}
	return nil
}

func (m *Integration) GetGithub() *GithubAccessConfig {
	if x, ok := m.GetConfig().(*Integration_Github); ok {
		return x.Github
	}
	return nil
}

func (m *Integration) GetAws() *AWSConfig {
	if x, ok := m.GetConfig().(*Integration_Aws); ok {
		return x.Aws
	}
	return nil
}

func (m *Integration) GetNexus() *NexusConfig {
	if x, ok := m.GetConfig().(*Integration_Nexus); ok {
		return x.Nexus
	}
	return nil
}

func (m *Integration) GetSlack() *SlackConfig {
	if x, ok := m.GetConfig().(*Integration_Slack); ok {
		return x.Slack
	}
	return nil
}

func (m *Integration) GetLocal() *LocalConfig {
	if x, ok := m.GetConfig().(*Integration_Local); ok {
		return x.Local
	}
	return nil
}

func (m *Integration) GetStream() *StreamConfig {
	if x, ok := m.GetConfig().(*Integration_Stream); ok {
		return x.Stream
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Integration) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Integration_OneofMarshaler, _Integration_OneofUnmarshaler, _Integration_OneofSizer, []interface{}{
		(*Integration_Bitbucket)(nil),
		(*Integration_Github)(nil),
		(*Integration_Aws)(nil),
		(*Integration_Nexus)(nil),
		(*Integration_Slack)(nil),
		(*Integration_Local)(nil),
		(*Integration_Stream)(nil),
	}
}

func _Integration_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Integration)
	// config
	switch x := m.Config.(type) {
	case *Integration_Bitbucket:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Bitbucket); err != nil {
			return err
		}
	case *Integration_Github:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Github); err != nil {
			return err
		}
	case *Integration_Aws:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Aws); err != nil {
			return err
		}
	case *Integration_Nexus:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Nexus); err != nil {
			return err
		}
	case *Integration_Slack:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Slack); err != nil {
			return err
		}
	case *Integration_Local:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Local); err != nil {
			return err
		}
	case *Integration_Stream:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Stream); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Integration.Config has unexpected type %T", x)
	}
	return nil
}

func _Integration_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Integration)
	switch tag {
	case 2: // config.bitbucket
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BitbucketAccessConfig)
		err := b.DecodeMessage(msg)
		m.Config = &Integration_Bitbucket{msg}
		return true, err
	case 3: // config.github
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GithubAccessConfig)
		err := b.DecodeMessage(msg)
		m.Config = &Integration_Github{msg}
		return true, err
	case 4: // config.aws
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AWSConfig)
		err := b.DecodeMessage(msg)
		m.Config = &Integration_Aws{msg}
		return true, err
	case 5: // config.nexus
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(NexusConfig)
		err := b.DecodeMessage(msg)
		m.Config = &Integration_Nexus{msg}
		return true, err
	case 6: // config.slack
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SlackConfig)
		err := b.DecodeMessage(msg)
		m.Config = &Integration_Slack{msg}
		return true, err
	case 7: // config.local
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(LocalConfig)
		err := b.DecodeMessage(msg)
		m.Config = &Integration_Local{msg}
		return true, err
	case 8: // config.stream
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(StreamConfig)
		err := b.DecodeMessage(msg)
		m.Config = &Integration_Stream{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Integration_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Integration)
	// config
	switch x := m.Config.(type) {
	case *Integration_Bitbucket:
		s := proto.Size(x.Bitbucket)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Integration_Github:
		s := proto.Size(x.Github)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Integration_Aws:
		s := proto.Size(x.Aws)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Integration_Nexus:
		s := proto.Size(x.Nexus)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Integration_Slack:
		s := proto.Size(x.Slack)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Integration_Local:
		s := proto.Size(x.Local)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Integration_Stream:
		s := proto.Size(x.Stream)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type IntegrationsList struct {
	Results []*Integration `protobuf:"bytes,1,rep,name=results" json:"results,omitempty"`
}

func (m *IntegrationsList) Reset()                    { *m = IntegrationsList{} }
func (m *IntegrationsList) String() string            { return proto.CompactTextString(m) }
func (*IntegrationsList) ProtoMessage()               {}
func (*IntegrationsList) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *IntegrationsList) GetResults() []*Integration {
	if m != nil {
		return m.Results
	}
	return nil
}

type BitbucketAccessConfig struct {
	Stuff string `protobuf:"bytes,1,opt,name=stuff" json:"stuff,omitempty"`
}

func (m *BitbucketAccessConfig) Reset()                    { *m = BitbucketAccessConfig{} }
func (m *BitbucketAccessConfig) String() string            { return proto.CompactTextString(m) }
func (*BitbucketAccessConfig) ProtoMessage()               {}
func (*BitbucketAccessConfig) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *BitbucketAccessConfig) GetStuff() string {
	if m != nil {
		return m.Stuff
	}
	return ""
}

type GithubAccessConfig struct {
	Stuff string `protobuf:"bytes,1,opt,name=stuff" json:"stuff,omitempty"`
}

func (m *GithubAccessConfig) Reset()                    { *m = GithubAccessConfig{} }
func (m *GithubAccessConfig) String() string            { return proto.CompactTextString(m) }
func (*GithubAccessConfig) ProtoMessage()               {}
func (*GithubAccessConfig) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *GithubAccessConfig) GetStuff() string {
	if m != nil {
		return m.Stuff
	}
	return ""
}

type AWSConfig struct {
	AwsSecretKey   string `protobuf:"bytes,1,opt,name=aws_secret_key,json=awsSecretKey" json:"aws_secret_key,omitempty"`
	AwsSecretKeyId string `protobuf:"bytes,2,opt,name=aws_secret_key_id,json=awsSecretKeyId" json:"aws_secret_key_id,omitempty"`
}

func (m *AWSConfig) Reset()                    { *m = AWSConfig{} }
func (m *AWSConfig) String() string            { return proto.CompactTextString(m) }
func (*AWSConfig) ProtoMessage()               {}
func (*AWSConfig) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *AWSConfig) GetAwsSecretKey() string {
	if m != nil {
		return m.AwsSecretKey
	}
	return ""
}

func (m *AWSConfig) GetAwsSecretKeyId() string {
	if m != nil {
		return m.AwsSecretKeyId
	}
	return ""
}

type NexusConfig struct {
	Stuff string `protobuf:"bytes,1,opt,name=stuff" json:"stuff,omitempty"`
}

func (m *NexusConfig) Reset()                    { *m = NexusConfig{} }
func (m *NexusConfig) String() string            { return proto.CompactTextString(m) }
func (*NexusConfig) ProtoMessage()               {}
func (*NexusConfig) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *NexusConfig) GetStuff() string {
	if m != nil {
		return m.Stuff
	}
	return ""
}

type SlackConfig struct {
	Stuff string `protobuf:"bytes,1,opt,name=stuff" json:"stuff,omitempty"`
}

func (m *SlackConfig) Reset()                    { *m = SlackConfig{} }
func (m *SlackConfig) String() string            { return proto.CompactTextString(m) }
func (*SlackConfig) ProtoMessage()               {}
func (*SlackConfig) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *SlackConfig) GetStuff() string {
	if m != nil {
		return m.Stuff
	}
	return ""
}

type LocalConfig struct {
	Stuff string `protobuf:"bytes,1,opt,name=stuff" json:"stuff,omitempty"`
}

func (m *LocalConfig) Reset()                    { *m = LocalConfig{} }
func (m *LocalConfig) String() string            { return proto.CompactTextString(m) }
func (*LocalConfig) ProtoMessage()               {}
func (*LocalConfig) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *LocalConfig) GetStuff() string {
	if m != nil {
		return m.Stuff
	}
	return ""
}

type StreamConfig struct {
	Stuff string `protobuf:"bytes,1,opt,name=stuff" json:"stuff,omitempty"`
}

func (m *StreamConfig) Reset()                    { *m = StreamConfig{} }
func (m *StreamConfig) String() string            { return proto.CompactTextString(m) }
func (*StreamConfig) ProtoMessage()               {}
func (*StreamConfig) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

func (m *StreamConfig) GetStuff() string {
	if m != nil {
		return m.Stuff
	}
	return ""
}

func init() {
	proto.RegisterType((*Integration)(nil), "pipelines.Integration")
	proto.RegisterType((*IntegrationsList)(nil), "pipelines.IntegrationsList")
	proto.RegisterType((*BitbucketAccessConfig)(nil), "pipelines.BitbucketAccessConfig")
	proto.RegisterType((*GithubAccessConfig)(nil), "pipelines.GithubAccessConfig")
	proto.RegisterType((*AWSConfig)(nil), "pipelines.AWSConfig")
	proto.RegisterType((*NexusConfig)(nil), "pipelines.NexusConfig")
	proto.RegisterType((*SlackConfig)(nil), "pipelines.SlackConfig")
	proto.RegisterType((*LocalConfig)(nil), "pipelines.LocalConfig")
	proto.RegisterType((*StreamConfig)(nil), "pipelines.StreamConfig")
}

func init() { proto.RegisterFile("integration.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 382 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0xd3, 0x4f, 0x6f, 0xa2, 0x40,
	0x18, 0x06, 0xf0, 0x65, 0x51, 0x94, 0x17, 0x63, 0xd6, 0x89, 0xbb, 0x3b, 0x97, 0x26, 0x04, 0x3d,
	0xd8, 0x26, 0x25, 0xfd, 0x73, 0xe8, 0xb5, 0xda, 0x26, 0xad, 0xa9, 0xe9, 0x01, 0x0f, 0xbd, 0x34,
	0x31, 0x03, 0x8e, 0x76, 0x22, 0x82, 0x61, 0x86, 0x58, 0x3f, 0x47, 0xbf, 0x70, 0xc3, 0xa8, 0x30,
	0x55, 0xb9, 0xe9, 0xfb, 0xfe, 0x1e, 0x18, 0xf2, 0x00, 0xb4, 0x58, 0x24, 0xe8, 0x3c, 0x21, 0x82,
	0xc5, 0x91, 0xbb, 0x4a, 0x62, 0x11, 0x23, 0x73, 0xc5, 0x56, 0x34, 0x64, 0x11, 0xe5, 0xce, 0x97,
	0x0e, 0xd6, 0xb0, 0x00, 0x08, 0x41, 0x25, 0x22, 0x4b, 0x8a, 0x35, 0x5b, 0xeb, 0x99, 0x9e, 0xfc,
	0x8d, 0xee, 0xc1, 0xf4, 0x99, 0xf0, 0xd3, 0x60, 0x41, 0x05, 0xfe, 0x6d, 0x6b, 0x3d, 0xeb, 0xc6,
	0x76, 0xf3, 0x4b, 0xb8, 0x83, 0xfd, 0xae, 0x1f, 0x04, 0x94, 0xf3, 0x87, 0x38, 0x9a, 0xb1, 0xf9,
	0xf3, 0x2f, 0xaf, 0x08, 0xa1, 0x3b, 0x30, 0xe6, 0x4c, 0x7c, 0xa4, 0x3e, 0xd6, 0x65, 0xfc, 0x4c,
	0x89, 0x3f, 0xc9, 0xc5, 0x41, 0x76, 0xc7, 0x51, 0x0f, 0x74, 0xb2, 0xe6, 0xb8, 0x22, 0x53, 0x6d,
	0x25, 0xd5, 0x7f, 0x1b, 0xe7, 0x38, 0x23, 0xc8, 0x85, 0x6a, 0x44, 0x3f, 0x53, 0x8e, 0xab, 0xd2,
	0xfe, 0x53, 0xec, 0x6b, 0x36, 0xcf, 0xf5, 0x96, 0x65, 0x9e, 0x87, 0x24, 0x58, 0x60, 0xe3, 0xc8,
	0x8f, 0xb3, 0x79, 0xe1, 0x25, 0xcb, 0x7c, 0x18, 0x07, 0x24, 0xc4, 0xb5, 0x23, 0x3f, 0xca, 0xe6,
	0x85, 0x97, 0x0c, 0x5d, 0x83, 0xc1, 0x45, 0x42, 0xc9, 0x12, 0xd7, 0x65, 0xe0, 0xbf, 0x7a, 0x03,
	0xb9, 0x28, 0x1e, 0x76, 0x0b, 0x07, 0x75, 0x30, 0x02, 0x39, 0x73, 0x1e, 0xe1, 0x8f, 0x52, 0x0a,
	0x1f, 0x31, 0x2e, 0xd0, 0x15, 0xd4, 0x12, 0xca, 0xd3, 0x50, 0x70, 0xac, 0xd9, 0xfa, 0xc1, 0x11,
	0x14, 0xed, 0xed, 0x99, 0x73, 0x09, 0x7f, 0x4f, 0x76, 0x83, 0xda, 0x50, 0xe5, 0x22, 0x9d, 0xcd,
	0x76, 0x2d, 0x6f, 0xff, 0x38, 0x17, 0x80, 0x8e, 0xbb, 0x28, 0xb1, 0xef, 0x60, 0xe6, 0x0d, 0xa0,
	0x2e, 0x34, 0xc9, 0x9a, 0x4f, 0x38, 0x0d, 0x12, 0x2a, 0x26, 0x0b, 0xba, 0xd9, 0xd9, 0x06, 0x59,
	0xf3, 0xb1, 0x1c, 0xbe, 0xd0, 0x0d, 0x3a, 0x87, 0xd6, 0x4f, 0x35, 0x61, 0x53, 0xf9, 0x36, 0x99,
	0x5e, 0x53, 0x85, 0xc3, 0xa9, 0xd3, 0x01, 0x4b, 0xe9, 0xac, 0xe4, 0x08, 0x1d, 0xb0, 0x94, 0xa2,
	0xca, 0x91, 0xd2, 0x4e, 0x09, 0xea, 0x42, 0x43, 0x6d, 0xe4, 0xb4, 0xf2, 0x0d, 0xf9, 0xed, 0xdc,
	0x7e, 0x07, 0x00, 0x00, 0xff, 0xff, 0xa4, 0x0b, 0x64, 0x24, 0x50, 0x03, 0x00, 0x00,
}
